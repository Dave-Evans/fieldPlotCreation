sys.time()
Sys.time()
class(Sys.time())
class(Sys.time()[1])
Sys.time()
Sys.time()[1]
Sys.time()[[1]]
Sys.time()[[1]][1]
as.double(Sys.time())
# attempting plot creating for long term N trials
library(sp)
library(rgdal)
library(maptools)
# use only feet or meters
plotRep <- function(llLat, llLong, ulLat, ulLong, lngth, wdth, NtoS, EtoW,
fileName = paste('plot_',as.double(Sys.time()), sep = ''), metric = T){
corners <- matrix(c(llLat, llLong, ulLat, ulLong), 2,2, T)
rownames(corners) <- c('ll','ul')
colnames(corners) <- c('lat','long')
corners <- data.frame(corners)
coordinates(corners) <- ~long + lat
proj4string(corners) <- CRS("+proj=longlat +datum=WGS84")
wtm <- CRS("+proj=tmerc +lat_0=0 +lon_0=-90 +k=0.9996 +x_0=520000 +y_0=-4480000 +ellps=GRS80 +units=m +no_defs")
corners <- spTransform(corners, wtm)
crds <- data.frame(corners@coords)
if (!metric){
lngth <- lngth * 0.3048
wdth <- wdth * 0.3048
}
y1 <- seq(crds[1,2],
crds[2,2]+(lngth/2), lngth)
x1 <- seq(crds[1,1],
crds[1,1]+(EtoW*wdth)+2, wdth)
# spinning into polygons
gridPts <- expand.grid(y1,x1)
gridPts <- data.frame(gridPts[,2],gridPts[,1])
colnames(gridPts) <- c('X', 'Y')
#
plots <- NULL
id <- 0
for (i in 1:nrow(gridPts)){
#         i <- 6
if (i %% EtoW == 0){next}
id <- id + 1
if (id > EtoW*NtoS){break}
polyPts <- gridPts[i:(i+1),]
polyPts <- rbind(polyPts,polyPts)
polyPts[3:4,1] <- polyPts[3:4,1]+wdth
indx <- c(1,2,4,3,1)
rePts <- polyPts[indx,]
rePolys <- Polygons(list(Polygon(rePts)), id)
plots <- c(plots,rePolys)
}
spPolys <- SpatialPolygons(plots)
dat <- data.frame(id = 1:(EtoW*NtoS))#, pltNum)
spdf <- SpatialPolygonsDataFrame(spPolys,dat)
proj4string(spdf) <- wtm
#plot(spdf)
labls <- NULL
for (lbl in 1:length(spdf@polygons)){
labls <- rbind(labls, spdf@polygons[[lbl]]@labpt)
}
#     text(labls, labels = spdf@data$id)
return(spdf)
spdfExp <- spTransform(spdf, CRS("+proj=longlat +datum=WGS84"))
#     writeOGR(spdfExp['id'], paste(fileName,'.kml',sep = ''), 'id',driver = 'KML')
# writing a shapefile
#     writeOGR(spdf, paste(fileName), 'id',driver = 'ESRI Shapefile')
}
tst <- plotRep(
43.300261,
-89.385877,
ulLat = 43.300400,
ulLong = -89.385877,
lngth = 10,
wdth = 40,
NtoS = 5,
EtoW = 6,
fileName = "A2sp_Rep4_v2",
metric = F)
plot(tst)
labls <- tst@polygons[[1]]@labpt
args(plotRep)
source('fieldPlotCreation.r')
library(RgoogleMaps)
library(ggmap)
rm(list=ls())
dev.off()
library(ggmap)
library(RgoogleMaps)
source('fieldPlotCreation_funtion.r')
tst <- plotRep(
llLat = 43.300261,      # lower left latitude
llOng = -89.385877,     # lower left longitude
ulLat = 43.300400,      # upper left corner latitude
ulLong = -89.385877,    # upper left corner longitude
lngth = 10,             # length of plot
wdth = 40,              # width of plot
NtoS = 5,               # number of plots in the rep running north to south
EtoW = 6,               # no of plots in the rep running east to west
fileName = "A2sp_Rep4_v2", # name of file --- currently not implemented
metric = F)             # are the length and width in metric or english?
tst <- plotRep(
llLat = 43.300261,      # lower left latitude
llLong = -89.385877,     # lower left longitude
ulLat = 43.300400,      # upper left corner latitude
ulLong = -89.385877,    # upper left corner longitude
lngth = 10,             # length of plot
wdth = 40,              # width of plot
NtoS = 5,               # number of plots in the rep running north to south
EtoW = 6,               # no of plots in the rep running east to west
fileName = "A2sp_Rep4_v2", # name of file --- currently not implemented
metric = F)             # are the length and width in metric or english?
str(tst)
plot(Tst)
plot(tst)
extent(tst)
library(raster)
extent(tst)
tst_ext = extent(tst)
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
sat_image <- get_map(
c(lon=long, lat=lat),
zoom = 12,
maptype = "terrain",
source = "google")
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
tst_ext = extent(tst)
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
sat_image <- get_map(
c(lon=long, lat=lat),
zoom = 12,
maptype = "terrain",
source = "google")
plot(sat_image)
ggmap(sat_image)
class(tst)
writeOGR(tst, "test_plot.shp")
writeOGR(tst, "test_plot.shp", driver = "ESRI Shapefile")
writeOGR(tst, layer = "test_plot.shp", driver = "ESRI Shapefile")
writeOGR(tst, dsn = '.',layer = "test_plot.shp", driver = "ESRI Shapefile")
ggplot(tst)
class(tst)
tstimp = readOGR('.', 'test_plot')
tstimp = readOGR(dsn = '.', layer = 'test_plot')
tstimp = readOGR(dsn = 'C:/DataFiles/fieldPlotCreation', layer = 'test_plot')
tstimp = readOGR(dsn = 'C:/DataFiles/fieldPlotCreation', layer = 'test_plot.shp')
plot(tstimp)
class(tstimp)
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
tst_ext = extent(tst)
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
sat_image <- get_map(
c(lon=long, lat=lat),
zoom = 12,
maptype = "terrain",
source = "google")
?fortify
tst = fortify(tst)
test_sat_map_plot <- sat_image +
geom_polygon(
aes(x=long, y=lat, group=group),
fill='grey',
size=.2,
color='green',
data=tst,
alpha=0)
class(sat_image)
library(ggmap)
library(RgoogleMaps)
# library(raster)
source('fieldPlotCreation_funtion.r')
tst <- plotRep(
llLat = 43.300261,      # lower left latitude
llLong = -89.385877,     # lower left longitude
ulLat = 43.300400,      # upper left corner latitude
ulLong = -89.385877,    # upper left corner longitude
lngth = 10,             # length of plot
wdth = 40,              # width of plot
NtoS = 5,               # number of plots in the rep running north to south
EtoW = 6,               # no of plots in the rep running east to west
fileName = "A2sp_Rep4_v2", # name of file --- currently not implemented
metric = F)             # are the length and width in metric or english?
# transforming and finding center of plot
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
tst_ext = extent(tst)
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
sat_image <- get_map(
c(lon=long, lat=lat),
zoom = 12,
maptype = "terrain",
source = "google")
tst = fortify(tst)
test_sat_map_plot <- sat_image +
geom_polygon(
aes(x=long, y=lat, group=group),
fill='grey',
size=.2,
color='green',
data=tst,
alpha=0)
tst_ext = extent(tst)
library(raster)
tst_ext = extent(tst)
long = mean(c(tst_ext@xmin, tst_ext@xmax))
lat = mean(c(tst_ext@ymin, tst_ext@ymax))
sat_image <- get_map(
c(lon=long, lat=lat),
zoom = 12,
maptype = "terrain",
source = "google")
tst = fortify(tst)
test_sat_map_plot <- sat_image +
geom_polygon(
aes(x=long, y=lat, group=group),
fill='grey',
size=.2,
color='green',
data=tst,
alpha=0)
extent(tst)
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
library(rgdal)
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
library(rgdal)
tst <- spTransform(tst, CRS("+proj=longlat +datum=WGS84"))
